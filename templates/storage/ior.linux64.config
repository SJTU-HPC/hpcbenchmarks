[SERVER]
11.11.11.11

[DOWNLOAD]

[DEPENDENCY]
export CC=`which mpicc`
export CXX=`which mpic++`
./hpcbench -install ior/master gcc

[ENV]
module use ./software/moduledeps/gcc11.2.0/
module load ior/master
mkdir -p $HPCbench_ROOT/benchmark/storage/ior
mkdir -p $HPCbench_ROOT/result/storage/ior

[APP]
app_name = ior
build_dir = $IOR_PATH
binary_dir = $IOR_PATH/bin
case_dir = $HPCbench_ROOT/benchmark/storage/ior 

[BUILD]

[CLEAN]

[RUN]
binary = ior

[JOB1]
#!/bin/bash
#SBATCH --job-name=single_client_single_fluence
#SBATCH --ntasks=1
#SBATCH --ntasks-per-node=1
#SBATCH --output=single_client_single_fluence.out
#SBATCH --error=single_client_single_fluence.err
#SBATCH -p {{ CPU_PARTITION }}

# Date Stamp for benchmark
DS=`date +"%F_%H:%M:%S"`
SEQ=1
MAXPROCS=1
IOREXE=ior
BASE_DIR=$HPCbench_ROOT/benchmark/storage/ior
RESULT_DIR=$HPCbench_ROOT/result/storage/ior

# Overall data set size in GiB. Must be >=MAXPROCS. Should be a power of 2.
DATA_SIZE=8
while [ ${SEQ} -le ${MAXPROCS} ]; do
        NPROC=`expr ${NCT} \* ${SEQ}`
        BSZ=`expr ${DATA_SIZE} / ${SEQ}`"g"
        mpirun $IOREXE -v -w -r -i 4 \
                    -o ${BASE_DIR}/ior-test1.file \
                      -t 1m -b ${BSZ} | tee ${RESULT_DIR}/single_client_single_fluence.txt
        SEQ=`expr ${SEQ} \* 2`
done

[JOB2]
#!/bin/bash
#SBATCH --job-name="single_client_multi_fluence"
#SBATCH -N 1
#SBATCH --ntasks-per-node=64
#SBATCH --output=single_client_multi_fluence.out
#SBATCH --error=single_client_multi_fluence.err
#SBATCH -p {{ CPU_PARTITION }}

IOREXE=ior
NCT=2

# Date Stamp for benchmark
DS=`date +"%F_%H:%M:%S"`
SEQ=8
MAXPROCS=8
DATA_SIZE=16

BASE_DIR=$HPCbench_ROOT/benchmark/storage/ior
RESULT_DIR=$HPCbench_ROOT/result/storage/ior

while [ ${SEQ} -le ${MAXPROCS} ]; do
        NPROC=`expr ${NCT} \* ${SEQ}`
        BSZ=`expr ${DATA_SIZE} / ${SEQ}`"g"
        mpirun -np ${NPROC} \
                  ior -v -w -r -i 4 -F \
                    -o ${BASE_DIR}/ior-test2.file \
                      -t 1m -b ${BSZ}  | tee ${RESULT_DIR}/single_client_multi_fluence.txt
        SEQ=`expr ${SEQ} \* 2`
done

[JOB3]
#!/bin/bash
#SBATCH --job-name="aggreagate_bandwidth"
#SBATCH -N 2
#SBATCH --ntasks-per-node=64
#SBATCH --output=aggreagate_bandwidth.out
#SBATCH --error=aggreagate_bandwidth.err
#SBATCH -p {{ CPU_PARTITION }}

NCT=2

# Date Stamp for benchmark
SEQ=64
MAXPROCS=128
DATA_SIZE=128

BASE_DIR=$HPCbench_ROOT/benchmark/storage/ior
RESULT_DIR=$HPCbench_ROOT/result/storage/ior

NCT=2 #`grep -v ^# hfile |wc -l`
DS=`date +"%F_%H:%M:%S"`
# Overall data set size in GiB. Must be >=MAXPROCS. Should be a power of 2.

while [ ${SEQ} -le ${MAXPROCS} ]; do
        NPROC=`expr ${NCT} \* ${SEQ}`
        BSZ=`expr ${DATA_SIZE} / ${SEQ}`"g"
        # Alternatively, set to a static value and let the data size increase.
        # BSZ="1g"
        # BSZ="${DATA_SIZE}"
        mpirun \
                  ior -v -w -r -i 4 -F \
                    -o ${BASE_DIR}/ior-test3.file \
                      -t 1m -b ${BSZ}  | tee ${RESULT_DIR}/aggregation_bandwidth.txt
        SEQ=`expr ${SEQ} \* 2`
done

[JOB4]
#!/bin/bash
#SBATCH --job-name="iops"
#SBATCH -N 5
#SBATCH --ntasks-per-node=64
#SBATCH --output=iops.out
#SBATCH --error=iops.err
#SBATCH -p {{ CPU_PARTITION }}

NCT=2

# Date Stamp for benchmark
SEQ=320
MAXPROCS=320
DATA_SIZE=640

BASE_DIR=$HPCbench_ROOT/benchmark/storage/ior
RESULT_DIR=$HPCbench_ROOT/result/storage/ior
mpirun --mca btl_openib_allow_ib true ior -vv -e -g -w -F\
                    -o ${BASE_DIR}/ior-test4.file \
                      -t 4k -b 8g |  tee ${RESULT_DIR}/iops.txt
SEQ=`expr ${SEQ} \* 2`

