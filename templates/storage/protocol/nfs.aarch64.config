[SERVER]
11.11.11.11

[DOWNLOAD]

[DEPENDENCY]

[ENV]
module use ./software/moduledeps/gcc${gcc_version_number}/
module load ior/master
mkdir -p $HPCbench_ROOT/benchmark/storage/protocol/nfs_test
mkdir -p $HPCbench_ROOT/result/storage/protocol/nfs_test

[APP]
app_name = ior
build_dir = $IOR_PATH
binary_dir = $IOR_PATH/bin
case_dir = $HPCbench_ROOT/benchmark/storage/protocol/nfs_test

[BUILD]

[CLEAN]

[RUN]
binary = ior


[BATCH]
DS=`date +"%F_%H:%M:%S"`
# IOR will be run in a loop, doubling the number of processes per client node
# with every iteration from $SEQ -> $MAXPROCS. If SEQ=1 and MAXPROCS=8, then the
# iterations will be 1, 2, 4, 8 processes per node.
# SEQ and MAXPROCS should be a power of 2 (including 2^0).
SEQ=1
MAXPROCS=1

# Overall data set size in GiB. Must be >=MAXPROCS. Should be a power of 2.
DATA_SIZE=8

BASE_DIR=/mnt/nfs
NCT=1

mkdir -p ${BASE_DIR}

while [ ${SEQ} -le ${MAXPROCS} ]; do
 NPROC=`expr ${NCT} \* ${SEQ}`
 # Pick a reasonable block size, bearing in mind the size of the target file system.
 # Bear in mind that the overall data size will be block size * number of processes.
 # Block size must be a multiple of transfer size (-t option in command line).
 BSZ=`expr ${DATA_SIZE} / ${SEQ}`"g"
 # Alternatively, set to a static value and let the data size increase.
 # BSZ="1g"
 # BSZ="${DATA_SIZE}"
 mpirun --allow-run-as-root ior -v -w -r -i 4 \
      -o ${BASE_DIR}/ior-test.file \
        -t 1m -b ${BSZ} |  tee $HPCbench_ROOT/result/storage/protocol/nfs_test/nfs.txt
 SEQ=`expr ${SEQ} \* 2`
done
